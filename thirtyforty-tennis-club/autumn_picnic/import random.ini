import random
from itertools import combinations

# 선수 목록 생성
men = [f"남{i+1}" for i in range(22)]
women = [f"여{i+1}" for i in range(10)]

# 설정
total_matches_per_player = 4
num_courts = 4
total_rounds = 8

# 각 선수의 경기 횟수 및 파트너 만남 횟수 추적
players_matches = {player: 0 for player in men + women}
partner_counts = {player: {} for player in men + women}
match_type_count = {player: {'혼성복식': 0, '남자복식': 0, '여자복식': 0} for player in men + women}

# 파트너 만남 횟수를 기록하는 함수
def record_match(players, match_type):
    for player in players:
        players_matches[player] += 1
        match_type_count[player][match_type] += 1
        for partner in players:
            if partner != player:
                if partner not in partner_counts[player]:
                    partner_counts[player][partner] = 0
                partner_counts[player][partner] += 1

# 조건 충족 확인 함수
def is_valid_match(players, match_type):
    for player in players:
        # 최대 경기 횟수 및 파트너와의 만남 횟수 확인
        if players_matches[player] >= total_matches_per_player:
            return False
        if any(partner_counts[p1].get(p2, 0) >= 3 for p1 in players for p2 in players if p1 != p2):
            return False
        
        # 여자는 혼성복식 2회, 여자복식 2회 조건 확인
        if player in women:
            if match_type == "혼성복식" and match_type_count[player]["혼성복식"] >= 2:
                return False
            if match_type == "여자복식" and match_type_count[player]["여자복식"] >= 2:
                return False
            
        # 남자는 혼성복식 2회와 남자복식 2회 또는 혼성복식 1회와 남자복식 3회 조건 확인
        if player in men:
            if match_type == "혼성복식" and match_type_count[player]["혼성복식"] >= 2:
                return False
            if match_type == "남자복식":
                if match_type_count[player]["남자복식"] == 3 and match_type_count[player]["혼성복식"] == 1:
                    return False
                if match_type_count[player]["남자복식"] == 2 and match_type_count[player]["혼성복식"] == 2:
                    return False
    return True

# 가능한 매치 조합을 미리 생성
mixed_double_matches = [
    list(combo) for combo in combinations(men, 2) for _ in combinations(women, 2)
]
men_double_matches = [list(combo) for combo in combinations(men, 4)]
women_double_matches = [list(combo) for combo in combinations(women, 4)]

# 경기 스케줄 생성
def create_schedule():
    schedule = []

    for _ in range(total_rounds):
        round_matches = []
        
        # 각 코트에 맞는 매치 타입을 미리 배정
        court_matches = random.choices(["혼성복식", "남자복식", "여자복식"], k=num_courts)

        for match_type in court_matches:
            # 각 매치 타입에 맞는 가능한 매치 리스트에서 조건을 충족하는 매치를 선택
            if match_type == "혼성복식":
                valid_matches = [match for match in mixed_double_matches if is_valid_match(match, "혼성복식")]
                if valid_matches:
                    match = random.choice(valid_matches)
                    mixed_double_matches.remove(match)
            elif match_type == "남자복식":
                valid_matches = [match for match in men_double_matches if is_valid_match(match, "남자복식")]
                if valid_matches:
                    match = random.choice(valid_matches)
                    men_double_matches.remove(match)
            elif match_type == "여자복식":
                valid_matches = [match for match in women_double_matches if is_valid_match(match, "여자복식")]
                if valid_matches:
                    match = random.choice(valid_matches)
                    women_double_matches.remove(match)
            else:
                continue

            # 매치 기록 및 경기 배정
            record_match(match, match_type)
            round_matches.append((match_type, match))

        schedule.append(round_matches)

    return schedule

# 스케줄 생성 및 출력
schedule = create_schedule()

for round_num, round_matches in enumerate(schedule, start=1):
    print(f"Round {round_num}")
    for court_num, (match_type, players) in enumerate(round_matches, start=1):
        print(f"  Court {court_num}: {match_type} - {players}")

# 각 선수별 경기 횟수 및 경기 타입 확인
for player, count in players_matches.items():
    print(f"{player} has {count} matches (혼성복식: {match_type_count[player]['혼성복식']}, 남자복식: {match_type_count[player]['남자복식']}, 여자복식: {match_type_count[player]['여자복식']})")
